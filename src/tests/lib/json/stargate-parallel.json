{
  "tests": [
    {
      "type": "shell",
      "name": "Ensure remote cluster is running",
      "container": "minitrino-lib-test",
      "command": "echo 'pass'",
      "exitCode": 0,
      "healthcheck": {
        "command": "curl -v -k minitrino-lib-test-dep-stargate-parallel-remote:8080/v1/info || true",
        "container": "minitrino-lib-test",
        "retries": 60,
        "exitCode": 0,
        "contains": [
          "\"starting\":false"
        ]
      }
    },
    {
      "type": "query",
      "name": "Test create schema in remote cluster",
      "sql": "CALL system.execute(query => 'CREATE SCHEMA test_schema WITH (location = ''s3a://minitrino/hive/test_schema'')')",
      "trinoCliArgs": [
        "--server 'http://localhost:8080'",
        "--user admin",
        "--catalog stargate_parallel",
        "--schema default"
      ],
      "contains": [
        "CALL"
      ]
    },
    {
      "type": "query",
      "name": "Test schema list",
      "sql": "SHOW SCHEMAS IN stargate_parallel",
      "trinoCliArgs": [
        "--server 'http://localhost:8080'",
        "--user admin"
      ],
      "contains": [
        "default",
        "information_schema",
        "test_schema"
      ]
    },
    {
      "type": "query",
      "name": "Test CTAS",
      "sql": "CALL system.execute(query => 'CREATE TABLE test_schema.test_table AS SELECT * FROM tpch.tiny.customer LIMIT 10')",
      "trinoCliArgs": [
        "--server 'http://localhost:8080'",
        "--user admin",
        "--catalog stargate_parallel",
        "--schema default"
      ],
      "contains": [
        "CALL"
      ]
    },
    {
      "type": "query",
      "name": "Test table select",
      "sql": "SELECT * FROM stargate_parallel.test_schema.test_table LIMIT 10",
      "trinoCliArgs": [
        "--server 'http://localhost:8080'",
        "--user admin"
      ],
      "contains": [
        "custkey",
        "name",
        "address"
      ]
    }
  ]
}
