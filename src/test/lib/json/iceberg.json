{
  "tests": [
    {
      "type": "logs",
      "name": "Ensure Iceberg REST metastore is running",
      "container": "iceberg-rest",
      "contains": [
        "Started @"
      ],
      "timeout": 60
    },
    {
      "type": "query",
      "name": "Test create schema",
      "sql": "CREATE SCHEMA iceberg.test_schema WITH (location = 's3a://sample-bucket/wh/test_schema')",
      "trinoCliArgs": [
        "--server 'http://minitrino:8080'",
        "--user admin"
      ],
      "contains": [
        "CREATE SCHEMA"
      ]
    },
    {
      "type": "query",
      "name": "Test schema list",
      "sql": "SHOW SCHEMAS IN iceberg",
      "trinoCliArgs": [
        "--server 'http://minitrino:8080'",
        "--user admin"
      ],
      "contains": [
        "information_schema",
        "test_schema"
      ]
    },
    {
      "type": "query",
      "name": "Test CTAS",
      "sql": "CREATE TABLE iceberg.test_schema.test_table AS SELECT * FROM tpch.tiny.customer LIMIT 10",
      "trinoCliArgs": [
        "--server 'http://minitrino:8080'",
        "--user admin"
      ],
      "contains": [
        "CREATE TABLE: 10 rows"
      ]
    },
    {
      "type": "query",
      "name": "Test table select",
      "sql": "SELECT * FROM iceberg.test_schema.test_table LIMIT 10",
      "trinoCliArgs": [
        "--server 'http://minitrino:8080'",
        "--user admin"
      ],
      "contains": [
        "custkey",
        "name",
        "address"
      ]
    },
    {
      "type": "query",
      "name": "Test table list",
      "sql": "SHOW TABLES IN iceberg.test_schema",
      "trinoCliArgs": [
        "--server 'http://minitrino:8080'",
        "--user admin"
      ],
      "contains": [
        "test_table"
      ]
    }
  ]
}
